<?php

/**
 * Isp
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
class Isp extends BaseIsp {
	
	/**
	 * Find all the ISP occurences
	 * 
	 */
	public static function findAll() {
		return Doctrine::getTable ( 'Isp' )->findAll ();
	}
	
	/**
	 * Get a ISP record resource
	 * 
	 * @param integer $id
	 * @return Doctrine_Record
	 */
	public static function find($id) {
		return Doctrine::getTable ( 'Isp' )->findOneBy ( 'isp_id', $id );
	}
	
	/**
	 * Get the list of the ISP Companies saved
	 * 
	 * @return ArrayObject
	 */
	public static function getList() {
		$items = array ();
		$arrTypes = Doctrine::getTable ( 'Isp' )->findAll ();
		foreach ( $arrTypes->getData () as $c ) {
			$items [$c ['isp_id']] = $c ['company'];
		}
		return $items;
	}
	
	/**
	 * Get ISP Company by ID
	 * 
	 * @return ArrayObject
	 */
	public static function getActiveIspById($id) {
		$isp = Doctrine_Query::create ()->from ( 'Isp u' )->where ( 'isp_id = ?', $id )->andWhere( 'active = ?', true )->execute (null, Doctrine::HYDRATE_ARRAY);

		return !empty($isp[0]) ? $isp[0] : array();
	}
	
	/**
	 * return the active ISP
	 * 
	 * @return array
	 */
	public static function getActiveISP() {
		$q = Doctrine_Query::create ()->from ( 'Isp u' )->where ( 'active=?', 1 );
		$isp = $q->execute (null, Doctrine::HYDRATE_ARRAY);
		return isset ( $isp [0] ) ? $isp [0] : array();
	}
	
	/**
	 * return the active ISP identifier
	 * 
	 * 
	 * @return integer or false
	 */
	public static function getActiveISPID() {
		$isp = Doctrine_Query::create ()->select('isp_id as id')->from ( 'Isp' )->where ( 'active = ?', 1 )->limit(1)->execute (null, Doctrine::HYDRATE_ARRAY);
		return isset ( $isp [0]['id'] ) ? $isp [0]['id'] : false;
	}
	
	/**
	 * return the logged ISP
	 * 
	 * @return array
	 */
	public static function getLogged() {
		$auth = Zend_Auth::getInstance()->getIdentity();

		if ( !is_array($auth) || empty($auth) || !isset($auth['isp_id']) || !intval($auth['isp_id']) > 0 ) {
			return false;
		}

		$isp_id = intval($auth['isp_id']);
		
		return self::getActiveIspById($isp_id);
	}	 
	
	/**
	 * return the logged ISP ID
	 * 
	 * @return integer isp_id
	 */
	public static function getLoggedId() {
		$isp = self::getLogged();
		return (is_array($isp) && isset($isp['isp_id'])) ? intval($isp['isp_id']) : 0;
	}	 
	
	/**
	 * return the isp_id based on logged user IF in admin or current url if else
	 */ 
	public static function getCurrentId() {
		$registry = Shineisp_Registry::get('ISP');
		
		if(!empty($registry) && is_object($registry)){
			return intval(Shineisp_Registry::get('ISP')->isp_id);
		}else{
			$isp = self::getByURL($_SERVER['HTTP_HOST']);
			return ( is_array($isp) && isset($isp['isp_id']) ) ? intval($isp['isp_id']) : 1;
		}
		
		/*
		$logged_isp_id = self::getLogged();
		
		// Use logged_isp_id ONLY IF we are in admin. If someone is browsing through the public website, it should use isp_id associated with that website
		if ( $logged_isp_id && Zend_Controller_Front::getInstance()->getRequest()->getModuleName() != 'default' ) {
			return intval($logged_isp_id);
		}

		$isp = self::getByURL($_SERVER['HTTP_HOST']);

		return ( is_array($isp) && isset($isp['isp_id']) ) ? intval($isp['isp_id']) : 1; // TODO: set to 1 for older installation that doesn't have isp_id properly set. It should be 0.
		*/
	}
	
	/**
	 * return the current ISP
	 * 
	 * @return array
	 */
	public static function getCurrentISP() {
		// TODO: this should be done better
		return Shineisp_Registry::get('ISP')->toArray();
		
		/*
		$isp_id = self::getCurrentId();
		
		$q   = Doctrine_Query::create ()->from ( 'Isp u' )->where ( 'isp_id = ? AND active = 1', $isp_id );
		$isp = $q->execute (null, Doctrine::HYDRATE_ARRAY);
		return isset ( $isp [0] ) ? $isp [0] : array();
		*/
	}
	
	/**
	 * get the active ISP Control Panel module var
	 * 
	 * 
	 * @return string
	 */
	public static function getPanel($isp_id = 1) {
		$Panel = Panels::findByIspId($isp_id);
		if ( $Panel ) {
			$panel_data = $Panel->getData();
		}

		return !empty($panel_data['name']) ? $panel_data['name'] : null;
		
		/*
		$isp = Doctrine_Query::create ()->select('isppanel')
									  ->from ( 'Isp' )
									  ->where ('isp_id = ?', $isp_id)
									  ->andWhere ( 'active = ?', 1 )
									  ->execute (null, Doctrine::HYDRATE_ARRAY);

		return isset ( $isp [0]['isppanel'] ) ? $isp [0]['isppanel'] : null;
		*/
	}
	
	/**
	 * Save all the ISP data
	 * 
	 * @return string
	 */
	public static function saveAll($data, $id=FALSE) {
		
		if(is_numeric($id)){
			$isp = self::find($id);
		}else{
			$isp = new Isp();	
		}
		
		$isp->company = !empty($data ['company']) ? $data ['company'] : NULL;
		$isp->vatnumber = !empty($data ['vatnumber']) ? $data ['vatnumber'] : NULL;
		$isp->address = !empty($data ['address']) ? $data ['address'] : NULL;
		$isp->zip = !empty($data ['zip']) ? $data ['zip'] : NULL;
		$isp->city = !empty($data ['city']) ? $data ['city'] : NULL;
		$isp->country = !empty($data ['country']) ?  $data ['country']: NULL;
		$isp->telephone = !empty($data ['telephone']) ? $data ['telephone'] : NULL;
		$isp->fax = !empty($data ['fax']) ? $data ['fax'] : NULL;
		$isp->slogan = !empty($data ['slogan']) ? $data ['slogan'] : NULL;
		$isp->manager = !empty($data ['manager']) ? $data ['manager'] : NULL;
		$isp->website = !empty($data ['website']) ? $data ['website'] : NULL;
		$isp->email = !empty($data ['email']) ? $data ['email'] : NULL;
		$isp->isppanel = !empty($data ['isppanel']) ? $data ['isppanel'] : NULL;
		$isp->bankname = !empty($data ['bankname']) ? $data ['bankname'] : NULL;
		$isp->iban = !empty($data ['iban']) ? $data ['iban'] : NULL;
		$isp->bic = !empty($data ['bic']) ? $data ['bic'] : NULL;
		
		if (! empty ( $data ['password'] )) {
			$isp->password = md5($data ['password']);
		}

		$isp->save ();
		$id = $isp['isp_id'];
		
		// Upload the logo
		self::UploadLogo($id);

		// Set the ISP panel
		if(!empty($data ['isppanel'])){
			Panels::setAsActive($data ['isppanel'], $isp ['isp_id']);
		}
		
		return $isp;
	}
	
	
	/**
     * UploadLogo
     * the extensions allowed are JPG, GIF, PNG
     */
    public static function UploadLogo($id){
    	try{
    		if(is_numeric($id)){
		    	$attachment = new Zend_File_Transfer_Adapter_Http();
		    	
				$files = $attachment->getFileInfo();
				
				if(!empty($files['logo']['name'])){
					// Create the directory
					@mkdir ( PUBLIC_PATH . "/documents/" );
					@mkdir ( PUBLIC_PATH . "/documents/isp/");
					
					// Set the destination directory
					$attachment->setDestination ( PUBLIC_PATH . "/documents/isp/" );
					
					if ($attachment->receive()) {
						$isp = self::find($id);
						$isp->logo =  $files['logo']['name'];
						$isp->save();
						return true;
					}	
				}
    		}
    		
    		return false;
    	}catch (Exception $e){
			throw new Exception($e->getMessage() . ": " . PUBLIC_PATH . "/documents/isp/");
    	}
    }	   

    /**
     * Get ISP by the MD5 email
     * @param string $email
     */
    public static function getIspbyMd5email($md5email){
    
    	// Check if the user exists!
    	$record = Doctrine_Query::create ()->from ( 'Isp i' )
									    	->where ( 'MD5(i.email) = ?', $md5email)
									    	->execute(array(), Doctrine::HYDRATE_ARRAY);
    
    	if($record){
    		return !empty($record[0]) ? $record[0] : FALSE;
    	}else{
    		return NULL;
    	}
    }
	
    /**
     * Get ISP by URL
     * @param string $email
     */
    public static function getByURL($url){
		$IspUrls = IspUrls::findOneByUrl($url);
		if ( $IspUrls ) {
			return $IspUrls->getData();
		}
		
		return 0;
    }

    /**
     * Get ISP by Customer Id
     * @param string $email
     */
    public static function getByCustomerId($id) {
    	$Customer = Customers::get_by_customerid($id);
		$isp_id   = (isset($Customer['isp_id']) ) ? intval($Customer['isp_id']) : 1; // TODO: remove fallback to 1
		
		return self::getActiveIspById($isp_id);
    }

	
	
	/**
	 * Check if the ISP exist
	 * 
	 * 
	 * @param $email
	 * @param $password
	 * @return boolean
	 */
	public static function login($email, $password) {
		$q = Doctrine_Query::create ()->from ( 'Isp u' )->where ( 'email=? and password=? and active=?', array ($email, md5 ( $password ), true ) );
		return $q->execute ()->toArray ();
	}
	
	/*
	 * get the Isp configured by URL 
	 * if it is not present get the default one
	 */
	public static function findByUrl($url) {
		
		$isp = Doctrine_Query::create ()->select ( '*' )
								->from ( 'Isp i' )
								->leftJoin ( 'i.IspUrls iu' )
								->where('iu.url = ?', $url)
								->fetchOne();
		
		if(empty($isp)){
			$isp = self::getDefault();
		}
		
		return $isp;
	}	 
	
	/*
	 * get the default ISP
	 */
	public static function getDefault() {
		
		$isp = Doctrine_Query::create ()->select ( '*' )
								->from ( 'Isp i' )
								->fetchOne();
		
		return $isp;
	}	 
	
	
	
	
	
	
	
	
	
	
	
	
	
}