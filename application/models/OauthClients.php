<?php

/**
 * OauthClients
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class OauthClients extends BaseOauthClients
{
	/**
	 * grid
	 * create the configuration of the grid
	 */	
	public static function grid($rowNum = 10) {
		
		$translator = Shineisp_Registry::getInstance ()->Zend_Translate;
		
		$config ['datagrid'] ['columns'] [] = array ('label' => null, 'field' => 'id', 'alias' => 'id', 'type' => 'selectall', 'attributes' => array ('width' => 20 ) );
		$config ['datagrid'] ['columns'] [] = array ('label' => $translator->translate ( 'ID' ), 'field' => 'id', 'alias' => 'id', 'sortable' => false, 'searchable' => false, 'type' => 'string', 'attributes' => array ('width' => 20 ) );
		$config ['datagrid'] ['columns'] [] = array ('label' => $translator->translate ( 'Application Name' ), 'field' => 'app_name', 'alias' => 'app_name', 'sortable' => true, 'searchable' => true, 'type' => 'string' );
		$config ['datagrid'] ['columns'] [] = array ('label' => $translator->translate ( 'Client ID' ), 'field' => 'client_id', 'alias' => 'client_id', 'sortable' => true, 'searchable' => true, 'type' => 'string', 'attributes' => array ('width' => 320 ));
		$config ['datagrid'] ['columns'] [] = array ('label' => $translator->translate ( 'Redirect URI' ), 'field' => 'redirect_uri', 'alias' => 'redirect_uri', 'type' => 'string', 'attributes' => array ('width' => 300 ));
		
		
		$config ['datagrid'] ['fields'] = "client_id, app_name, redirect_uri";
		$config ['datagrid'] ['dqrecordset'] = Doctrine_Query::create ()->select ( $config ['datagrid'] ['fields'] )->from ( 'OauthClients' );
		
		$config ['datagrid'] ['rownum'] = $rowNum;
		
		$config ['datagrid'] ['basepath'] = "/admin/applications/";
		$config ['datagrid'] ['index'] = "id";
		$config ['datagrid'] ['rowlist'] = array ('10', '50', '100', '1000' );
		
		$config ['datagrid'] ['buttons'] ['edit'] ['label'] = $translator->translate ( 'Edit' );
		$config ['datagrid'] ['buttons'] ['edit'] ['cssicon'] = "edit";
		$config ['datagrid'] ['buttons'] ['edit'] ['action'] = "/admin/applications/edit/id/%d";
		
		$config ['datagrid'] ['buttons'] ['delete'] ['label'] = $translator->translate ( 'Delete' );
		$config ['datagrid'] ['buttons'] ['delete'] ['cssicon'] = "delete";
		$config ['datagrid'] ['buttons'] ['delete'] ['action'] = "/admin/applications/delete/id/%d";
		return $config;
	}



	/**
	 * Save all the data
	 * @param array $params
	 */
	public static function saveAll(array $params) {
		$firstSave = true;
		
		if ( !empty($params['id']) && is_numeric($params['id'])) {
			$OauthClients = Doctrine::getTable ( 'OauthClients' )->find ( $params['id'] );
			$firstSave    = false;
		}else{
			$auth = Zend_Auth::getInstance()->getIdentity();
			
			$OauthClients = new OauthClients();
			
			// These are generated only on first save
			$OauthClients->user_id   = isset($auth['user_id']) ? intval($auth['user_id']) : 0;
			$OauthClients->client_id = Shineisp_Commons_Uuid::generate();
			//$OauthClients->client_secret = Shineisp_Commons_Utilities::generateRandomPassword(48);
		}

		$OauthClients->app_name     = $params['app_name'];
		$OauthClients->redirect_uri = $params['redirect_uri'];
		$OauthClients->active       = isset($params['active']) ? intval($params['active']) : 1; // default is active (1)

		$OauthClients->save ();
		
		return $OauthClients->id;
	}

	/**
     * Get a record 
     * @param $id
     * @return Doctrine_Record
     */
    public static function find($id) {
        return Doctrine::getTable ( 'OauthClients' )->find ( $id );
    }

	/**
     * Get all the information about the oauth client (application) 
     * @param $id
     * @return ArrayObject
     */
    public static function getAll($id) {
    	
        $record = Doctrine_Query::create ()
        			->from ( 'OauthClients' )
        			->where ( "id = ? ", $id)
        			->execute ( array (), Doctrine_Core::HYDRATE_ARRAY );
        		
    	return !empty($record[0]) ? $record[0] : array();
    }


	/**
	 * Delete an application
	 * 
	 * @param integer $id
	 * @return boolean
	 */
	public static function del($id){
		$id = intval($id);
		if ( $id <= 0 ) {
			return false;
		}
		
		Doctrine_Query::create()
	        ->delete('OauthClients')
	        ->where('id = ?', $id)
			->limit(1)
			->execute();
		
		return true;
	}
	
}