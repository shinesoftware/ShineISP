<?php

/**
 * CompanyTypes
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ShineISP
 * 
 * @author     Shine Software <info@shineisp.com>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
class CompanyTypes extends BaseCompanyTypes {

	/**
	 * create the configuration of the grid
	 */
	public static function grid($rowNum = 10) {
	
		$translator = Shineisp_Registry::getInstance ()->Zend_Translate;
	
		$config ['datagrid'] ['columns'] [] = array ('label' => null, 'field' => 't.type_id', 'alias' => 'type_id', 'type' => 'selectall' );
		$config ['datagrid'] ['columns'] [] = array ('label' => $translator->translate ( 'ID' ), 'field' => 'l.type_id', 'alias' => 'type_id', 'sortable' => true, 'searchable' => true, 'type' => 'string' );
		$config ['datagrid'] ['columns'] [] = array ('label' => $translator->translate ( 'Name' ), 'field' => 'l.name', 'alias' => 'name', 'sortable' => true, 'searchable' => true, 'type' => 'string' );
	
		$config ['datagrid'] ['fields'] = "type_id, name";
		$config ['datagrid'] ['dqrecordset'] = Doctrine_Query::create ()->select ( $config ['datagrid'] ['fields'] )->from ( 'CompanyTypes l' );
	
		$config ['datagrid'] ['rownum'] = $rowNum;
	
		$config ['datagrid'] ['basepath'] = "/admin/companytypes/";
		$config ['datagrid'] ['index'] = "type_id";
		$config ['datagrid'] ['rowlist'] = array ('10', '50', '100', '1000' );
	
		$config ['datagrid'] ['buttons'] ['edit'] ['label'] = $translator->translate ( 'Edit' );
		$config ['datagrid'] ['buttons'] ['edit'] ['cssicon'] = "edit";
		$config ['datagrid'] ['buttons'] ['edit'] ['action'] = "/admin/companytypes/edit/id/%d";
	
		$config ['datagrid'] ['buttons'] ['delete'] ['label'] = $translator->translate ( 'Delete' );
		$config ['datagrid'] ['buttons'] ['delete'] ['cssicon'] = "delete";
		$config ['datagrid'] ['buttons'] ['delete'] ['action'] = "/admin/companytypes/delete/id/%d";
		return $config;
	}
	

	/**
	 * Delete a record by ID
	 * @param $id
	 */
	public static function deleteItem($id) {
		Doctrine::getTable ( 'CompanyTypes' )->findOneBy ( 'type_id', $id )->delete();
	}
	
	/**
	 * Get a record by ID
	 * 
	 * @param $id
	 * @return Doctrine Record
	 */
	public static function getbyId($id, $fields = "*", $retarray = false) {
		$dq = Doctrine_Query::create ()->select ( $fields )
		->from ( 'CompanyTypes t' )
		->where ( "t.type_id = ?", $id )
		->limit ( 1 );
	
		$retarray = $retarray ? Doctrine_Core::HYDRATE_ARRAY : null;
		$record = $dq->execute ( array (), $retarray );
		return $record;
	}

	/**
	 * Save the record
	 *
	 * @param posted var from the form
	 * @return Boolean
	 */
	public static function saveData($record, $id=null) {
	
		// Set the new values
		if (is_numeric ( $id )) {
			$companytype = self::find( $id );
		}else{
			$companytype = new CompanyTypes();
		}
		
		$companytype->name = $record ['name'];
		$companytype->legalform_id = $record ['legalform_id'];
		$companytype->active = $record ['active'];
		
		if($companytype->trySave()){
			return $companytype->type_id;
		}
	
		return false;
	}
	
	/**
	 * 
	 * @return Ambigous <Doctrine_Collection, multitype:, mixed, PDOStatement, Doctrine_Adapter_Statement, Doctrine_Connection_Statement, unknown, number>
	 */
	public static function findAll() {
		return Doctrine::getTable ( 'CompanyTypes' )->findAll ();
	}
	
	/**
	 * 
	 * @param unknown_type $id
	 * @return Ambigous <Doctrine_Record, mixed, boolean, Doctrine_Collection, PDOStatement, Doctrine_Adapter_Statement, Doctrine_Connection_Statement, unknown, number>
	 */
	public static function find($id) {
		return Doctrine::getTable ( 'CompanyTypes' )->findOneBy ( 'type_id', $id );
	}
	
	/**
	 * 
	 * @param unknown_type $empty
	 * @return Ambigous <number, multitype:unknown >
	 */
	public static function getList($empty = false) {
		$items = array ();
		
		$arrTypes = Doctrine::getTable ( 'CompanyTypes' )->findAll ();
		foreach ( $arrTypes->getData () as $c ) {
			$items [$c ['type_id']] = $c ['name'];
		}
		
		if ($empty) {
			$registry = Shineisp_Registry::getInstance ();
			$translation = $registry->Zend_Translate;
			$tmpoptions = array ("" => $translation->translate ( 'Select ...' ) );
			$items = $tmpoptions + $items;
		}
		
		return $items;
	}
	
	/**
	 * 
	 * @param unknown_type $id
	 * @return multitype:unknown
	 */
	public static function getListbyLegalformID($id) {
		$items = array ();
		
		$records = Doctrine_Query::create ()->from ( 'CompanyTypes ct' )->where ( 'ct.legalform_id = ?', $id )->execute ( array (), Doctrine_Core::HYDRATE_ARRAY );
		foreach ( $records as $c ) {
			$items [$c ['type_id']] = $c ['name'];
		}
		
		return $items;
	}
}