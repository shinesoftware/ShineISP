<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Dns_Zones', 'doctrine');

/**
 * BaseDns_Zones
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $zone_id
 * @property integer $domain_id
 * @property string $subdomain
 * @property integer $type_id
 * @property string $target
 * @property timestamp $updating_date
 * @property Domains $Domains
 * @property Dns_Zones_Types $Dns_Zones_Types
 * 
 * @package    ShineISP
 * 
 * @author     Shine Software <info@shineisp.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDns_Zones extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('dns_zones');
        $this->hasColumn('zone_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('domain_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => '4',
             ));
        $this->hasColumn('subdomain', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('type_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => '4',
             ));
        $this->hasColumn('target', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('updating_date', 'timestamp', 25, array(
             'type' => 'timestamp',
             'notnull' => true,
             'length' => '25',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Domains', array(
             'local' => 'domain_id',
             'foreign' => 'domain_id'));

        $this->hasOne('Dns_Zones_Types', array(
             'local' => 'type_id',
             'foreign' => 'type_id'));
    }
}