<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('OauthClients', 'doctrine');

/**
 * BaseOauthClients
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property string $app_name
 * @property string $client_id
 * @property string $client_secret
 * @property string $redirect_uri
 * @property boolean $active
 * @property Doctrine_Collection $AdminUser
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOauthClients extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('oauth_clients');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('app_name', 'string', 250, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '250',
             ));
        $this->hasColumn('client_id', 'string', 250, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '250',
             ));
        $this->hasColumn('client_secret', 'string', 250, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '250',
             ));
        $this->hasColumn('redirect_uri', 'string', 500, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '500',
             ));
        $this->hasColumn('active', 'boolean', 25, array(
             'type' => 'boolean',
             'default' => 1,
             'length' => '25',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('AdminUser', array(
             'local' => 'user_id',
             'foreign' => 'user_id'));
    }
}