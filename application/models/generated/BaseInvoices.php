<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Invoices', 'doctrine');

/**
 * BaseInvoices
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $invoice_id
 * @property integer $number
 * @property string $formatted_number
 * @property integer $customer_id
 * @property integer $order_id
 * @property date $invoice_date
 * @property string $note
 * @property Customers $Customers
 * @property Orders $Orders
 * @property Doctrine_Collection $CreditNotes
 * 
 * @package    ShineISP
 * 
 * @author     Shine Software <info@shineisp.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseInvoices extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('invoices');
        $this->hasColumn('invoice_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('number', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('formatted_number', 'string', 100, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '100',
             ));
        $this->hasColumn('customer_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('order_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('invoice_date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('note', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));


        $this->index('formatted_number', array(
             'fields' => 
             array(
              0 => 'formatted_number',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Customers', array(
             'local' => 'customer_id',
             'foreign' => 'customer_id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Orders', array(
             'local' => 'order_id',
             'foreign' => 'order_id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('CreditNotes', array(
             'local' => 'invoice_id',
             'foreign' => 'invoice_id'));
    }
}