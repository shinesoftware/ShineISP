<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('DomainsBulk', 'doctrine');

/**
 * BaseDomainsBulk
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $domain_id
 * @property timestamp $startingdate
 * @property string $domain
 * @property integer $tld_id
 * @property string $sessionid
 * @property boolean $isavailable
 * @property integer $customer_id
 * @property float $price
 * @property float $cost
 * @property string $authinfo
 * @property Customers $Customers
 * @property DomainsTlds $DomainsTlds
 * 
 * @package    ShineISP
 * 
 * @author     Shine Software <info@shineisp.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDomainsBulk extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('domains_bulk');
        $this->hasColumn('domain_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('startingdate', 'timestamp', 25, array(
             'type' => 'timestamp',
             'notnull' => true,
             'length' => '25',
             ));
        $this->hasColumn('domain', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '200',
             ));
        $this->hasColumn('tld_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => '4',
             ));
        $this->hasColumn('sessionid', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '200',
             ));
        $this->hasColumn('isavailable', 'boolean', 25, array(
             'type' => 'boolean',
             'notnull' => false,
             'length' => '25',
             ));
        $this->hasColumn('customer_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => '4',
             ));
        $this->hasColumn('price', 'float', 10, array(
             'type' => 'float',
             'notnull' => false,
             'length' => '10',
             ));
        $this->hasColumn('cost', 'float', 10, array(
             'type' => 'float',
             'notnull' => false,
             'length' => '10',
             ));
        $this->hasColumn('authinfo', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Customers', array(
             'local' => 'customer_id',
             'foreign' => 'customer_id'));

        $this->hasOne('DomainsTlds', array(
             'local' => 'tld_id',
             'foreign' => 'tld_id'));
    }
}