<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Isp', 'doctrine');

/**
 * BaseIsp
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $isp_id
 * @property string $company
 * @property string $vatnumber
 * @property string $manager
 * @property string $address
 * @property string $zip
 * @property string $city
 * @property string $country
 * @property string $telephone
 * @property string $fax
 * @property string $bankname
 * @property string $iban
 * @property string $bic
 * @property string $website
 * @property string $email
 * @property string $password
 * @property string $isppanel
 * @property string $logo
 * @property string $slogan
 * @property boolean $active
 * @property Servers $Servers
 * @property Orders $Orders
 * @property Settings $Settings
 * @property Panels $Panels
 * @property Doctrine_Collection $AdminUser
 * @property Doctrine_Collection $Customers
 * @property Doctrine_Collection $IspUrls
 * @property Doctrine_Collection $Messages
 * @property Doctrine_Collection $Products
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseIsp extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('isp');
        $this->hasColumn('isp_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('company', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '200',
             ));
        $this->hasColumn('vatnumber', 'string', 200, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '200',
             ));
        $this->hasColumn('manager', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '200',
             ));
        $this->hasColumn('address', 'string', 200, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '200',
             ));
        $this->hasColumn('zip', 'string', 200, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '200',
             ));
        $this->hasColumn('city', 'string', 200, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '200',
             ));
        $this->hasColumn('country', 'string', 200, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '200',
             ));
        $this->hasColumn('telephone', 'string', 200, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '200',
             ));
        $this->hasColumn('fax', 'string', 200, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '200',
             ));
        $this->hasColumn('bankname', 'string', 200, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '200',
             ));
        $this->hasColumn('iban', 'string', 200, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '200',
             ));
        $this->hasColumn('bic', 'string', 200, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '200',
             ));
        $this->hasColumn('website', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '200',
             ));
        $this->hasColumn('email', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '100',
             ));
        $this->hasColumn('password', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '100',
             ));
        $this->hasColumn('isppanel', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '100',
             ));
        $this->hasColumn('logo', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '',
             ));
        $this->hasColumn('slogan', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '',
             ));
        $this->hasColumn('active', 'boolean', 25, array(
             'type' => 'boolean',
             'notnull' => false,
             'length' => '25',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Servers', array(
             'local' => 'isp_id',
             'foreign' => 'isp_id'));

        $this->hasOne('Orders', array(
             'local' => 'isp_id',
             'foreign' => 'isp_id'));

        $this->hasOne('Settings', array(
             'local' => 'isp_id',
             'foreign' => 'isp_id'));

        $this->hasOne('Panels', array(
             'local' => 'isp_id',
             'foreign' => 'isp_id'));

        $this->hasMany('AdminUser', array(
             'local' => 'isp_id',
             'foreign' => 'isp_id'));

        $this->hasMany('Customers', array(
             'local' => 'isp_id',
             'foreign' => 'isp_id'));

        $this->hasMany('IspUrls', array(
             'local' => 'isp_id',
             'foreign' => 'isp_id'));

        $this->hasMany('Messages', array(
             'local' => 'isp_id',
             'foreign' => 'isp_id'));

        $this->hasMany('Products', array(
             'local' => 'isp_id',
             'foreign' => 'isp_id'));
    }
}