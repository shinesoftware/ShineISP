<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CancelRequests', 'doctrine');

/**
 * BaseCancelRequests
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $request_id
 * @property timestamp $date
 * @property string $ip
 * @property integer $orderitem_id
 * @property enum $type
 * @property string $note
 * @property integer $status_id
 * @property Statuses $Statuses
 * @property OrdersItems $OrdersItems
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCancelRequests extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('cancel_requests');
        $this->hasColumn('request_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('date', 'timestamp', 25, array(
             'type' => 'timestamp',
             'notnull' => true,
             'length' => '25',
             ));
        $this->hasColumn('ip', 'string', 45, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '45',
             ));
        $this->hasColumn('orderitem_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'immediate',
              1 => 'eob',
             ),
             ));
        $this->hasColumn('note', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '',
             ));
        $this->hasColumn('status_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '4',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Statuses', array(
             'local' => 'status_id',
             'foreign' => 'status_id'));

        $this->hasOne('OrdersItems', array(
             'local' => 'orderitem_id',
             'foreign' => 'detail_id'));
    }
}