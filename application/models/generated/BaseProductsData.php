<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ProductsData', 'doctrine');

/**
 * BaseProductsData
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $productdata_id
 * @property string $name
 * @property string $nickname
 * @property string $shortdescription
 * @property string $description
 * @property integer $product_id
 * @property integer $language_id
 * @property string $metakeywords
 * @property string $metadescription
 * @property Products $Products
 * @property Languages $Languages
 * 
 * @package    ShineISP
 * 
 * @author     Shine Software <info@shineisp.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProductsData extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('products_data');
        $this->hasColumn('productdata_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('name', 'string', 150, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '150',
             ));
        $this->hasColumn('nickname', 'string', 150, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '150',
             ));
        $this->hasColumn('shortdescription', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '',
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '',
             ));
        $this->hasColumn('product_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('language_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'length' => '4',
             ));
        $this->hasColumn('metakeywords', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('metadescription', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Products', array(
             'local' => 'product_id',
             'foreign' => 'product_id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Languages', array(
             'local' => 'language_id',
             'foreign' => 'language_id',
             'onDelete' => 'CASCADE'));
    }
}