<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Reviews', 'doctrine');

/**
 * BaseReviews
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $review_id
 * @property integer $product_id
 * @property timestamp $publishedat
 * @property string $nick
 * @property string $subject
 * @property string $email
 * @property boolean $active
 * @property integer $stars
 * @property string $review
 * @property string $city
 * @property string $latitude
 * @property string $longitude
 * @property string $referer
 * @property string $ip
 * @property Products $Products
 * @property Doctrine_Collection $OrdersItems
 * 
 * @package    ShineISP
 * 
 * @author     Shine Software <info@shineisp.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseReviews extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('reviews');
        $this->hasColumn('review_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('product_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => '4',
             ));
        $this->hasColumn('publishedat', 'timestamp', 25, array(
             'type' => 'timestamp',
             'notnull' => true,
             'length' => '25',
             ));
        $this->hasColumn('nick', 'string', 250, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '250',
             ));
        $this->hasColumn('subject', 'string', 250, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '250',
             ));
        $this->hasColumn('email', 'string', 250, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '250',
             ));
        $this->hasColumn('active', 'boolean', 25, array(
             'type' => 'boolean',
             'default' => 0,
             'length' => '25',
             ));
        $this->hasColumn('stars', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('review', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '',
             ));
        $this->hasColumn('city', 'string', 250, array(
             'type' => 'string',
             'length' => '250',
             ));
        $this->hasColumn('latitude', 'string', 25, array(
             'type' => 'string',
             'length' => '25',
             ));
        $this->hasColumn('longitude', 'string', 25, array(
             'type' => 'string',
             'length' => '25',
             ));
        $this->hasColumn('referer', 'string', 250, array(
             'type' => 'string',
             'length' => '250',
             ));
        $this->hasColumn('ip', 'string', 25, array(
             'type' => 'string',
             'length' => '25',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Products', array(
             'local' => 'product_id',
             'foreign' => 'product_id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('OrdersItems', array(
             'local' => 'review_id',
             'foreign' => 'review_id'));
    }
}