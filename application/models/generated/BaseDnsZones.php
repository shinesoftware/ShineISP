<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('DnsZones', 'doctrine');

/**
 * BaseDnsZones
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $zone_id
 * @property integer $domain_id
 * @property string $subdomain
 * @property integer $type_id
 * @property string $target
 * @property timestamp $updating_date
 * @property Domains $Domains
 * @property DnsZonesTypes $DnsZonesTypes
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDnsZones extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('dns_zones');
        $this->hasColumn('zone_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('domain_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('subdomain', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('type_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('target', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('updating_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Domains', array(
             'local' => 'domain_id',
             'foreign' => 'domain_id'));

        $this->hasOne('DnsZonesTypes', array(
             'local' => 'type_id',
             'foreign' => 'type_id'));
    }
}