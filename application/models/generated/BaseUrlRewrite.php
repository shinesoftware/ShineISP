<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('UrlRewrite', 'doctrine');

/**
 * BaseUrlRewrite
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $url_rewrite_id
 * @property integer $product_id
 * @property integer $category_id
 * @property string $request_path
 * @property string $target_path
 * @property string $description
 * @property boolean $temporary
 * @property timestamp $date_added
 * @property Products $Products
 * @property ProductsCategories $ProductsCategories
 * 
 * @package    ShineISP
 * 
 * @author     Shine Software <info@shineisp.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUrlRewrite extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('url_rewrite');
        $this->hasColumn('url_rewrite_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('product_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('category_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('request_path', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('target_path', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('temporary', 'boolean', 25, array(
             'type' => 'boolean',
             'length' => '25',
             ));
        $this->hasColumn('date_added', 'timestamp', 25, array(
             'type' => 'timestamp',
             'length' => '25',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Products', array(
             'local' => 'product_id',
             'foreign' => 'product_id'));

        $this->hasOne('ProductsCategories', array(
             'local' => 'category_id',
             'foreign' => 'category_id'));
    }
}