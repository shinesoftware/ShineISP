<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ProductsCategories', 'doctrine');

/**
 * BaseProductsCategories
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $category_id
 * @property string $name
 * @property string $description
 * @property string $uri
 * @property string $googlecategs
 * @property integer $parent
 * @property boolean $enabled
 * @property boolean $show_in_menu
 * @property string $keywords
 * @property string $blocks
 * @property integer $position
 * @property integer $externalid
 * @property string $custom
 * @property Doctrine_Collection $Wikilinks
 * @property Doctrine_Collection $UrlRewrite
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProductsCategories extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('products_categories');
        $this->hasColumn('category_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('name', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '200',
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '',
             ));
        $this->hasColumn('uri', 'string', 150, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '150',
             ));
        $this->hasColumn('googlecategs', 'string', 250, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '250',
             ));
        $this->hasColumn('parent', 'integer', 4, array(
             'type' => 'integer',
             'default' => '0',
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('enabled', 'boolean', 25, array(
             'type' => 'boolean',
             'default' => '1',
             'length' => '25',
             ));
        $this->hasColumn('show_in_menu', 'boolean', 25, array(
             'type' => 'boolean',
             'default' => '1',
             'length' => '25',
             ));
        $this->hasColumn('keywords', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('blocks', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('position', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('externalid', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('custom', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Wikilinks', array(
             'local' => 'category_id',
             'foreign' => 'category_id'));

        $this->hasMany('UrlRewrite', array(
             'local' => 'category_id',
             'foreign' => 'category_id'));
    }
}