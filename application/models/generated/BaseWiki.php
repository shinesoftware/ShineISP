<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Wiki', 'doctrine');

/**
 * BaseWiki
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $wiki_id
 * @property date $creationdate
 * @property integer $category_id
 * @property integer $language_id
 * @property integer $views
 * @property integer $active
 * @property string $subject
 * @property string $uri
 * @property string $content
 * @property string $metadescription
 * @property string $metakeywords
 * @property integer $ishelpful
 * @property WikiCategories $WikiCategories
 * @property Languages $Languages
 * @property Doctrine_Collection $Wikilinks
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseWiki extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('wiki');
        $this->hasColumn('wiki_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('creationdate', 'date', 25, array(
             'type' => 'date',
             'notnull' => true,
             'length' => '25',
             ));
        $this->hasColumn('category_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => '4',
             ));
        $this->hasColumn('language_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => '4',
             ));
        $this->hasColumn('views', 'integer', 4, array(
             'type' => 'integer',
             'default' => 0,
             'length' => '4',
             ));
        $this->hasColumn('active', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'default' => '1',
             'length' => '4',
             ));
        $this->hasColumn('subject', 'string', 250, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '250',
             ));
        $this->hasColumn('uri', 'string', 250, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '250',
             ));
        $this->hasColumn('content', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '',
             ));
        $this->hasColumn('metadescription', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '',
             ));
        $this->hasColumn('metakeywords', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '',
             ));
        $this->hasColumn('ishelpful', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('WikiCategories', array(
             'local' => 'category_id',
             'foreign' => 'category_id'));

        $this->hasOne('Languages', array(
             'local' => 'language_id',
             'foreign' => 'language_id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Wikilinks', array(
             'local' => 'wiki_id',
             'foreign' => 'wiki_id'));
    }
}