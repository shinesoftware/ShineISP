<?php

/**
 * DomainsBulk
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class DomainsBulk extends BaseDomainsBulk {
	
	/**
	 * setStatus
	 * Set a record with a status
	 * @param $id, $status
	 * @return Void
	 */
	public static function setAvailability($id, $status) {
		$dq = Doctrine_Query::create ()->update ( 'DomainsBulk d' )->set ( 'd.isavailable', '?', $status )->where ( "d.domain_id = ?", $id );
		return $dq->execute ( array (), Doctrine_Core::HYDRATE_ARRAY );
	}
	
	/**
	 * Clear the temporary domain list by session id
	 * @param $id
	 * @return Doctrine_Record
	 */
	public static function clear($sessionId) {
		return Doctrine::getTable ( 'DomainsBulk' )->findBy('sessionid', $sessionId)->delete();
	}
	
	/**
	 * find
	 * Get the domains by id
	 * @param $id
	 * @return Doctrine_Record
	 */
	public static function find($id) {
		return Doctrine::getTable ( 'DomainsBulk' )->find ( $id, Doctrine_Core::HYDRATE_ARRAY );
	}
	
	/**
	 * findDomainsTobeCheck
	 * Get all the domains that the isavailable field is null
	 * @param $customerID
	 * @param $session
	 * @return Doctrine_Record
	 */
	public static function findDomainsTobeCheck($customerID, $session) {
		$dq = Doctrine_Query::create ()->from ( 'DomainsBulk' )->where('customer_id = ?', $customerID)->andWhere('sessionid = ?', $session)->addWhere('isavailable is null');
		return $dq->execute ( array (), Doctrine_Core::HYDRATE_ARRAY );
	}
	
	/**
	 * findbySession
	 * Get the domains by session id
	 * @param $session
	 * @return Doctrine_Record
	 */
	public static function findbySession($session) {
		return Doctrine_Query::create ()->from ( 'DomainsBulk db' )
										->leftJoin('db.DomainsTlds dt')
										->leftJoin('dt.DomainsTldsData dtd')
										->where('sessionid = ?', $session) 
										->execute ( array (), Doctrine_Core::HYDRATE_ARRAY );
		
	}
	
	/**
	 * findbyCustomerID
	 * Get the domains by customer id
	 * @param $customerID
	 * @return Doctrine_Record
	 */
	public static function findbyCustomerID($customerID) {
		return Doctrine::getTable ( 'DomainsBulk' )->findBy ( 'customer_id', $customerID );
	}
	
	/**
	 * Save data
	 * @param $customerID
	 * @return Doctrine_Record
	 */
	public static function add_domain($domainame, $tldid, $isavailable, $customerid=null, $authinfo = null) {
		$domain = new DomainsBulk();
		
		$data = DomainsTlds::find($tldid);
		
		$domain['domain'] = $domainame;
		$domain['startingdate'] = date('Y-m-d H:i:s');
		$domain['tld_id'] = $tldid;
		$domain['sessionid'] = Zend_Session::getId();
		$domain['isavailable'] = $isavailable;
		$domain['customer_id'] = $customerid;
		$domain['authinfo'] = $authinfo;
		$domain['price'] = $isavailable ? $data['registration_price'] : $data['transfer_price'];
		$domain['cost'] = $isavailable ? $data['registration_cost'] : $data['transfer_cost'];
		
		return $domain->trySave();
	}
}