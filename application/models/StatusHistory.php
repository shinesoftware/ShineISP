<?php

/**
 * StatusHistory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class StatusHistory extends BaseStatusHistory
{
	/**
	 * Insert a new status
	 * @param array $params
	 */
	public static function insert($section_id, $status_id) {
		$status_id  = intval($status_id);
		$section_id = intval($section_id);
		
		if( !$status_id || !$section_id ) {
			return false;
		}
		
		$StatusHistory = new self;
		$StatusHistory->section_id = $section_id;
		$StatusHistory->status_id  = $status_id;
		$StatusHistory->datetime   = date('Y-m-d H:i:s');
		$StatusHistory->save ();
		
		return true;
	}

	/**
	 * Get all data by Id
	 * @param $id
	 * @return Doctrine Record / Array
	 */
	public static function getAllInfo($id, $fields = "*", $retarray = false) {
	
		try {
			$dq = Doctrine_Query::create ()->select ( $fields )
			->from ( 'StatusHistory sh' )
			->where ( "history_id = ?", $id )
			->limit ( 1 );
	
			$retarray = $retarray ? Doctrine_Core::HYDRATE_ARRAY : null;
			$item = $dq->execute ( array (), $retarray );
	
			return $item;
		} catch (Exception $e) {
			die ( $e->getMessage () );
		}
	}

	/**
	 * Get a record by ID
	 * @param $id
	 * @return Doctrine Record
	 */
	public static function find($id) {
		return Doctrine::getTable ( 'StatusHistory' )->find ( $id );
	}
	
	
	/**
	 * Get all records by sectionId and status section
	 * 
	 * @param $sectionId, $statusSection [orders, customers, ...], $fields="*"
	 * @return Doctrine Record
	 */
	public static function getAll($sectionId, $statusSection="orders", $fields="*, s.status AS status") {

		if(!is_numeric($sectionId)){
			return array();
		}
		
		if(empty($statusSection)){
			$statusSection = "orders";
		}
		
		$sectionId = intval($sectionId);
		
		$records = Doctrine_Query::create ()->select($fields)
									   	->from( 'StatusHistory sh' )
									   	->leftJoin('sh.Statuses s')
									   	->where ( 'sh.section_id = ?', $sectionId )
									    ->andWhere ( 's.section = ?',  $statusSection )
										->andWhere ( 's.public = 1')
										->orderBy ( 'sh.datetime ASC')
									    ->execute ( array (), Doctrine_Core::HYDRATE_ARRAY );
		
		for ($i=0;$i<count($records);$i++){
			$records[$i]['datetime'] = Shineisp_Commons_Utilities::formatDateOut($records[$i]['datetime'], null, true);
		}
		
		return $records;
										
	}
	
	/**
	 * Get status 
	 * 
	 * @param $sectionId, $statusSection [orders, customers, ...], $fields="*"
	 * @return Doctrine Record
	 */
	public static function getStatusList($sectionId, $statusSection="orders", $fields=null) {
		$translator = Shineisp_Registry::getInstance ()->Zend_Translate;
		
		$data = array();
		$i = 0;
		
		if(!is_numeric($sectionId)){
			return array();
		}
		
		if(empty($statusSection)){
			$statusSection = "orders";
		}
		
		$sectionId = intval($sectionId);
		
		$dq = Doctrine_Query::create ()->from( 'StatusHistory sh' )
									   	->leftJoin('sh.Statuses s')
									   	->where ( 'sh.section_id = ?', $sectionId )
									    ->andWhere ( 's.section = ?',  $statusSection )
										->andWhere ( 's.public = 1')
										->orderBy ( 'sh.datetime ASC');
		if($fields){
			$dq->select($fields);
		}else{
			$dq->select("*, s.status AS status");
		}
		
		$records = $dq->execute ( array (), Doctrine_Core::HYDRATE_ARRAY );
		
		foreach ($records as $record){
			$data[$i]['datetime'] = Shineisp_Commons_Utilities::formatDateOut($record['datetime'], null, true);
			$data[$i]['status'] = $translator->translate($record['status']);
			$i++;
		}
		
		return $data;
										
	}
	
	
	
	
}